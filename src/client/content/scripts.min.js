var board=function(){function e(){var e=$(this),a=e.attr("class");"attacker"==a?g?(g.attr("class","attacker"),g=null):(e.attr("class","attacker-select"),g=e):g&&("empty"==a?(google_apis.player_move(g.attr("id"),e.attr("id")),g=null):(g.attr("class","attacker"),g=null))}function a(){c.on("click",".row > div > div",e),google_apis.new_game(),r.hide()}function n(e){return 2==e||3==e?(2==e?(r.append("Player won!"),r.addClass("attacker-header")):(r.addClass("defender-header"),r.append("AI won!")),c.off(),r.removeClass("hidden"),!0):!1}function o(){c=$("#board");for(var a="",n=0;s>n;n++){for(var o="<div class='row'>",t=0;u>t;t++)o+="<div><div data-val='0' class='empty' id='"+n+","+t+"'></div></div>";o+="</div>",a+=o}c.append(a),c.on("click",".row > div > div",e)}function i(e,a,n,o){var i=document.getElementById(a),l=$(i);l.attr("class",m[0]);var c=document.getElementById(n),r=$(c);if(r.attr("class",m[e]),o&&o[0])for(var d=0;d<o.length;d++){f=o[d][0],t=o[d][1],console.log(f);var s=document.getElementById(f+","+t),u=$(s);u.attr("class",m[0])}}function l(e){e=e;for(var a=0;a<e.length;a++)for(var n=e[a].length,o=0;n>o;o++){var t=e[a][o],i=document.getElementById(a+","+o),l=$(i);l.attr("class",m[t])}}var c=$("#board"),r=$("#board_header"),d=$("#new_game");const s=9,u=9;var g=null;const m=["empty","attacker","defender","king"];return d.on("click",a),{empty_board:o,new_board:l,move:i,game_end:n}}(),dialogs=function(){function e(){d.showModal()}function a(){s.showModal()}function n(){u.showModal()}function o(){d.close()}function t(){s.close()}function i(){u.close()}var l=$("#how"),c=$("#history"),r=$("#about"),d=document.getElementById("how-dialog"),s=document.getElementById("history-dialog"),u=document.getElementById("about-dialog");l.on("click",e),c.on("click",a),r.on("click",n),d.querySelector(".close").addEventListener("click",o),s.querySelector(".close").addEventListener("click",t),u.querySelector(".close").addEventListener("click",i)}(),google_apis=function(){function e(){gapi.client.hnefatafl.new_game().execute(function(e){t=e.key,board.new_board(JSON.parse(e.board)),o()})}function a(){gapi.client.hnefatafl.last_player_game().execute(function(a){if(console.log(a),404==a.code)e();else{t=a.key,board.new_board(JSON.parse(a.board));var n=parseInt(a.state);board.game_end(n)||1==n&&o()}})}function n(e,a){var n=e.split(","),i=a.split(",");gapi.client.hnefatafl.player_move({game_key:t,origin_row:n[0],origin_column:n[1],destination_row:i[0],destination_column:i[1]}).execute(function(e){console.log(e),board.move(e.origin_value,e.origin,e.destination,"[]"!=e.captures?JSON.parse(e.captures.replace("(","[").replace(")","]")):null),board.game_end(parseInt(e.game_state))||o()})}function o(){gapi.client.hnefatafl.ai_move({game_key:t}).execute(function(e){console.log(e),board.move(e.origin_value,e.origin,e.destination,"[]"!=e.captures?JSON.parse(e.captures.replace("(","[").replace(")","]")):null),board.game_end(parseInt(e.game_state))})}var t=null;return{new_game:e,player_move:n,ai_move:o,last_player_game:a}}(),google_auth=function(){function e(){gapi.client.load("oauth2","v2"),gapi.client.load("hnefatafl","v1",a,i)}function a(){n(immediate=!0),setTimeout(profile.enableLogin(),2e3)}function n(e){gapi.auth.authorize({client_id:"314272160250-ucrqg44c1oj9knlrfatqvqf1b3pm9819.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/userinfo.email",immediate:e},t)}function o(){return l}function t(e){gapi.client.oauth2.userinfo.get().execute(function(e){e.code||(profile.setLoggedIn(e.picture,e.name),l=!0,google_apis.last_player_game())})}const i="http://localhost:8080/_ah/api";var l=!1;return{loadModules:e,isAuthed:o,signin:n}}(),profile=function(){function e(){o.on("click",a),console.log("enabled"),o.removeClass("hidden")}function a(){console.log("clik"),google_auth.signin(immediate=!1)}function n(e,a){console.log(a),t.html(a),t.removeClass("hidden"),o.addClass("hidden")}var o=$("#login"),t=$("#name");return{enableLogin:e,setLoggedIn:n}}();
//# sourceMappingURL=data:application/json;base64,
