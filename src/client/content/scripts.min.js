var board=function(){function e(){var e=$(this),a=e.attr("class");if("attacker"==a)g?(g.attr("class","attacker"),g=null):(e.attr("class","attacker-select"),g=e);else if(g)if("empty"==a){google_apis.player_move(g.attr("id"),e.attr("id"))}else g.attr("class","attacker"),g=null}function a(){l.on("click",".row > div > div",e),google_apis.new_game(),c.hide()}function n(e){return 2==e||3==e?(2==e?(c.append("Player won!"),c.addClass("attacker-header")):(c.addClass("defender-header"),c.append("AI won!")),l.off(),c.removeClass("hidden"),!0):!1}function o(){l=$("#board");for(var a="",t=0;s>t;t++){for(var n="<div class='row'>",o=0;u>o;o++)n+="<div><div data-val='0' class='empty' id='"+t+","+o+"'></div></div>";n+="</div>",a+=n}l.append(a),l.on("click",".row > div > div",e)}function i(e,a,n,o){g&&(g.attr("class","attacker"),g=null);var i=document.getElementById(a),r=$(i);r.attr("class",m[0]);var l=document.getElementById(n),c=$(l);if(c.attr("class",m[e]),o&&o[0])for(var d=0;d<o.length;d++){f=o[d][0],t=o[d][1];var s=document.getElementById(f+","+t),u=$(s);u.attr("class",m[0])}}function r(e){e=e;for(var a=0;a<e.length;a++)for(var t=e[a].length,n=0;t>n;n++){var o=e[a][n],i=document.getElementById(a+","+n),r=$(i);r.attr("class",m[o])}}var l=$("#board"),c=$("#board_header"),d=$("#new_game");const s=9,u=9;var g=null;const m=["empty","attacker","defender","king"];return d.on("click",a),{empty_board:o,new_board:r,move:i,game_end:n}}(),dialogs=function(){function e(){d.showModal()}function a(){s.showModal()}function t(){u.showModal()}function n(){d.close()}function o(){s.close()}function i(){u.close()}var r=$("#how"),l=$("#history"),c=$("#about"),d=document.getElementById("how-dialog"),s=document.getElementById("history-dialog"),u=document.getElementById("about-dialog");r.on("click",e),l.on("click",a),c.on("click",t),d.querySelector(".close").addEventListener("click",n),s.querySelector(".close").addEventListener("click",o),u.querySelector(".close").addEventListener("click",i)}(),google_apis=function(){function e(){gapi.client.hnefatafl.new_game().execute(function(e){console.log(e),o=e.key,board.new_board(JSON.parse(e.board)),n()})}function a(){gapi.client.hnefatafl.last_player_game().execute(function(a){if(404==a.code)e();else{o=a.key,board.new_board(JSON.parse(a.board));var t=parseInt(a.state);board.game_end(t)||1==t&&n()}})}function t(e,a){var t=e.split(","),i=a.split(",");try{gapi.client.hnefatafl.player_move({game_key:o,origin_row:t[0],origin_column:t[1],destination_row:i[0],destination_column:i[1]}).execute(function(e){board.move(e.origin_value,e.origin,e.destination,"[]"!=e.captures?JSON.parse(e.captures.replace("(","[").replace(")","]")):null),board.game_end(parseInt(e.game_state))||n()})}catch(r){}}function n(){gapi.client.hnefatafl.ai_move({game_key:o}).execute(function(e){board.move(e.origin_value,e.origin,e.destination,"[]"!=e.captures?JSON.parse(e.captures.replace("(","[").replace(")","]")):null),board.game_end(parseInt(e.game_state))})}var o=null;return{new_game:e,player_move:t,ai_move:n,last_player_game:a}}(),google_auth=function(){function e(){gapi.client.load("oauth2","v2"),gapi.client.load("hnefatafl","v1",a,i)}function a(){t(immediate=!0),setTimeout(profile.enableLogin(),2e3)}function t(e){gapi.auth.authorize({client_id:"314272160250-ucrqg44c1oj9knlrfatqvqf1b3pm9819.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/userinfo.email",immediate:e},o)}function n(){return r}function o(e){gapi.client.oauth2.userinfo.get().execute(function(e){e.code||(profile.setLoggedIn(e.picture,e.name),r=!0,google_apis.last_player_game())})}const i="https://hnefatafl-game.appspot.com/_ah/api";var r=!1;return{loadModules:e,isAuthed:n,signin:t}}(),profile=function(){function e(){n.on("click",a),n.removeClass("hidden")}function a(){google_auth.signin(immediate=!1)}function t(e,a){o.html(a),o.removeClass("hidden"),n.addClass("hidden")}var n=$("#login"),o=$("#name");return{enableLogin:e,setLoggedIn:t}}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvYXJkLmpzIiwiZGlhbG9ncy5qcyIsImdvb2dsZV9hcGkuanMiLCJnb29nbGVfYXV0aC5qcyIsInByb2ZpbGUuanMiXSwibmFtZXMiOlsiYm9hcmQiLCJvbkNsaWNrIiwiJGNlbGwiLCIkIiwidGhpcyIsInR5cGUiLCJhdHRyIiwiJHNlbGVjdGVkIiwiZ29vZ2xlX2FwaXMiLCJwbGF5ZXJfbW92ZSIsIm5ld19nYW1lIiwiJGJvYXJkIiwib24iLCIkYm9hcmRfaGVhZGVyIiwiaGlkZSIsImdhbWVfZW5kIiwiZ2FtZV9zdGF0ZSIsImFwcGVuZCIsImFkZENsYXNzIiwib2ZmIiwicmVtb3ZlQ2xhc3MiLCJlbXB0eV9ib2FyZCIsInRhYmxlX2J1aWxkZXIiLCJyb3ciLCJIRUlHSFQiLCJyb3dfYnVpbGRlciIsImNvbCIsIldJRFRIIiwibW92ZSIsIm9yaWdpbl92YWx1ZSIsIm9yaWdpbiIsImRlc3RpbmF0aW9uIiwiY2FwdHVyZXMiLCJvciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCIkb3IiLCJ0eXBlTmFtZXMiLCJkZSIsIiRkZSIsImkiLCJsZW5ndGgiLCJmIiwidCIsImNhIiwiJGNhIiwibmV3X2JvYXJkIiwiY29sdW1uV2lkdGgiLCJ2YWwiLCIkbmV3X2dhbWUiLCJkaWFsb2dzIiwib3BlbkhvdyIsImhvd19kaWFsb2ciLCJzaG93TW9kYWwiLCJvcGVuSGlzdG9yeSIsImhpc3RvcnlfZGlhbG9nIiwib3BlbkFib3V0IiwiYWJvdXRfZGlhbG9nIiwiY2xvc2VIb3ciLCJjbG9zZSIsImNsb3NlSGlzdG9yeSIsImNsb3NlQWJvdXQiLCIkaG93IiwiJGhpc3RvcnkiLCIkYWJvdXQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImdhcGkiLCJjbGllbnQiLCJobmVmYXRhZmwiLCJleGVjdXRlIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwiS0VZIiwia2V5IiwiSlNPTiIsInBhcnNlIiwiYWlfbW92ZSIsImxhc3RfcGxheWVyX2dhbWUiLCJjb2RlIiwic3RhdGUiLCJwYXJzZUludCIsIm9yaWdpbnMiLCJzcGxpdCIsImRlc3RpbmF0aW9ucyIsImdhbWVfa2V5Iiwib3JpZ2luX3JvdyIsIm9yaWdpbl9jb2x1bW4iLCJkZXN0aW5hdGlvbl9yb3ciLCJkZXN0aW5hdGlvbl9jb2x1bW4iLCJyZXBsYWNlIiwiZXJyIiwiZ29vZ2xlX2F1dGgiLCJsb2FkTW9kdWxlcyIsImxvYWQiLCJhZnRlckxvYWRlZCIsInVybCIsInNpZ25pbiIsImltbWVkaWF0ZSIsInNldFRpbWVvdXQiLCJwcm9maWxlIiwiZW5hYmxlTG9naW4iLCJhdXRoIiwiYXV0aG9yaXplIiwiY2xpZW50X2lkIiwic2NvcGUiLCJ1c2VyQXV0aGVkIiwiaXNBdXRoZWQiLCJzaWduZWRpbiIsIm1vZGUiLCJvYXV0aDIiLCJ1c2VyaW5mbyIsImdldCIsInJlc3AiLCJzZXRMb2dnZWRJbiIsInBpY3R1cmUiLCJuYW1lIiwiJGxvZ2luIiwiX2xvZ2luQ2xpY2siLCJzcmMiLCIkbmFtZSIsImh0bWwiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUFBLE9BQUEsV0FvQkEsUUFBQUMsS0FDQSxHQUFBQyxHQUFBQyxFQUFBQyxNQUNBQyxFQUFBSCxFQUFBSSxLQUFBLFFBRUEsSUFBQSxZQUFBRCxFQUNBRSxHQUNBQSxFQUFBRCxLQUFBLFFBQUEsWUFDQUMsRUFBQSxPQUdBTCxFQUFBSSxLQUFBLFFBQUEsbUJBQ0FDLEVBQUFMLE9BR0EsSUFBQUssRUFDQSxHQUFBLFNBQUFGLEVBQ0EsQ0FBQUcsWUFBQUMsWUFDQUYsRUFBQUQsS0FBQSxNQUNBSixFQUFBSSxLQUFBLFdBSUFDLEdBQUFELEtBQUEsUUFBQSxZQUNBQyxFQUFBLEtBSUEsUUFBQUcsS0FDQUMsRUFBQUMsR0FBQSxRQUFBLG1CQUFBWCxHQUNBTyxZQUFBRSxXQUNBRyxFQUFBQyxPQVFBLFFBQUFDLEdBQUFDLEdBQ0EsTUFBQSxJQUFBQSxHQUFBLEdBQUFBLEdBQ0EsR0FBQUEsR0FDQUgsRUFBQUksT0FBQSxlQUNBSixFQUFBSyxTQUFBLHFCQUdBTCxFQUFBSyxTQUFBLG1CQUNBTCxFQUFBSSxPQUFBLFlBRUFOLEVBQUFRLE1BQ0FOLEVBQUFPLFlBQUEsV0FDQSxJQUVBLEVBR0EsUUFBQUMsS0FFQVYsRUFBQVIsRUFBQSxTQUVBLEtBQUEsR0FEQW1CLEdBQUEsR0FDQUMsRUFBQSxFQUFBQyxFQUFBRCxFQUFBQSxJQUFBLENBRUEsSUFBQSxHQURBRSxHQUFBLG9CQUNBQyxFQUFBLEVBQUFDLEVBQUFELEVBQUFBLElBQ0FELEdBQUEsNENBQUFGLEVBQUEsSUFBQUcsRUFBQSxnQkFFQUQsSUFBQSxTQUVBSCxHQUFBRyxFQUdBZCxFQUFBTSxPQUFBSyxHQUVBWCxFQUFBQyxHQUFBLFFBQUEsbUJBQUFYLEdBUUEsUUFBQTJCLEdBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUF6QixJQUNBQSxFQUFBRCxLQUFBLFFBQUEsWUFDQUMsRUFBQSxLQUdBLElBQUEwQixHQUFBQyxTQUFBQyxlQUFBTCxHQUNBTSxFQUFBakMsRUFBQThCLEVBQ0FHLEdBQUE5QixLQUFBLFFBQUErQixFQUFBLEdBRUEsSUFBQUMsR0FBQUosU0FBQUMsZUFBQUosR0FDQVEsRUFBQXBDLEVBQUFtQyxFQUdBLElBRkFDLEVBQUFqQyxLQUFBLFFBQUErQixFQUFBUixJQUVBRyxHQUFBQSxFQUFBLEdBRUEsSUFBQSxHQUFBUSxHQUFBLEVBQUFBLEVBQUFSLEVBQUFTLE9BQUFELElBQUEsQ0FDQUUsRUFBQVYsRUFBQVEsR0FBQSxHQUNBRyxFQUFBWCxFQUFBUSxHQUFBLEVBQ0EsSUFBQUksR0FBQVYsU0FBQUMsZUFBQU8sRUFBQSxJQUFBQyxHQUNBRSxFQUFBMUMsRUFBQXlDLEVBQ0FDLEdBQUF2QyxLQUFBLFFBQUErQixFQUFBLEtBS0EsUUFBQVMsR0FBQTlDLEdBQ0FBLEVBQUFBLENBQ0EsS0FBQSxHQUFBdUIsR0FBQSxFQUFBQSxFQUFBdkIsRUFBQXlDLE9BQUFsQixJQUVBLElBQUEsR0FEQXdCLEdBQUEvQyxFQUFBdUIsR0FBQWtCLE9BQ0FmLEVBQUEsRUFBQXFCLEVBQUFyQixFQUFBQSxJQUFBLENBQ0EsR0FBQXNCLEdBQUFoRCxFQUFBdUIsR0FBQUcsR0FFQWlCLEVBQUFULFNBQUFDLGVBQUFaLEVBQUEsSUFBQUcsR0FFQXhCLEVBQUFDLEVBQUF3QyxFQUVBekMsR0FBQUksS0FBQSxRQUFBK0IsRUFBQVcsS0F2SUEsR0FBQXJDLEdBQUFSLEVBQUEsVUFDQVUsRUFBQVYsRUFBQSxpQkFDQThDLEVBQUE5QyxFQUFBLFlBRUEsTUFBQXFCLEdBQUEsRUFDQUcsRUFBQSxDQUVBLElBRUFwQixHQUFBLElBRUEsTUFBQThCLElBQ0EsUUFDQSxXQUNBLFdBQ0EsT0E4SUEsT0EzR0FZLEdBQUFyQyxHQUFBLFFBQUFGLElBNEdBVyxZQUFBQSxFQUNBeUIsVUFBQUEsRUFDQWxCLEtBQUFBLEVBQ0FiLFNBQUFBLE1DbktBbUMsUUFBQSxXQVVBLFFBQUFDLEtBQ0FDLEVBQUFDLFlBR0EsUUFBQUMsS0FDQUMsRUFBQUYsWUFHQSxRQUFBRyxLQUNBQyxFQUFBSixZQUdBLFFBQUFLLEtBQ0FOLEVBQUFPLFFBR0EsUUFBQUMsS0FDQUwsRUFBQUksUUFHQSxRQUFBRSxLQUNBSixFQUFBRSxRQTdCQSxHQUFBRyxHQUFBM0QsRUFBQSxRQUNBNEQsRUFBQTVELEVBQUEsWUFDQTZELEVBQUE3RCxFQUFBLFVBRUFpRCxFQUFBbEIsU0FBQUMsZUFBQSxjQUNBb0IsRUFBQXJCLFNBQUFDLGVBQUEsa0JBQ0FzQixFQUFBdkIsU0FBQUMsZUFBQSxlQTBCQTJCLEdBQUFsRCxHQUFBLFFBQUF1QyxHQUNBWSxFQUFBbkQsR0FBQSxRQUFBMEMsR0FDQVUsRUFBQXBELEdBQUEsUUFBQTRDLEdBRUFKLEVBQUFhLGNBQUEsVUFBQUMsaUJBQUEsUUFBQVIsR0FDQUgsRUFBQVUsY0FBQSxVQUFBQyxpQkFBQSxRQUFBTixHQUNBSCxFQUFBUSxjQUFBLFVBQUFDLGlCQUFBLFFBQUFMLE1DeENBckQsWUFBQSxXQUlBLFFBQUFFLEtBQ0F5RCxLQUFBQyxPQUFBQyxVQUFBM0QsV0FBQTRELFFBQUEsU0FBQUMsR0FDQUMsUUFBQUMsSUFBQUYsR0FDQUcsRUFBQUgsRUFBQUksSUFDQTNFLE1BQUE4QyxVQUFBOEIsS0FBQUMsTUFBQU4sRUFBQXZFLFFBQ0E4RSxNQUlBLFFBQUFDLEtBRUFaLEtBQUFDLE9BQUFDLFVBQUFVLG1CQUFBVCxRQUFBLFNBQUFDLEdBQ0EsR0FBQSxLQUFBQSxFQUFBUyxLQUNBdEUsUUFFQSxDQUNBZ0UsRUFBQUgsRUFBQUksSUFDQTNFLE1BQUE4QyxVQUFBOEIsS0FBQUMsTUFBQU4sRUFBQXZFLE9BQ0EsSUFBQWlGLEdBQUFDLFNBQUFYLEVBQUFVLE1BQ0FqRixPQUFBZSxTQUFBa0UsSUFDQSxHQUFBQSxHQUFBSCxPQUtBLFFBQUFyRSxHQUFBcUIsRUFBQUMsR0FDQSxHQUFBb0QsR0FBQXJELEVBQUFzRCxNQUFBLEtBQ0FDLEVBQUF0RCxFQUFBcUQsTUFBQSxJQUVBLEtBRUFqQixLQUFBQyxPQUFBQyxVQUFBNUQsYUFDQTZFLFNBQUFaLEVBQ0FhLFdBQUFKLEVBQUEsR0FDQUssY0FBQUwsRUFBQSxHQUNBTSxnQkFBQUosRUFBQSxHQUNBSyxtQkFBQUwsRUFBQSxLQUNBZixRQUFBLFNBQUFDLEdBRUF2RSxNQUFBNEIsS0FDQTJDLEVBQUExQyxhQUNBMEMsRUFBQXpDLE9BQ0F5QyxFQUFBeEMsWUFDQSxNQUFBd0MsRUFBQXZDLFNBQ0E0QyxLQUFBQyxNQUNBTixFQUFBdkMsU0FBQTJELFFBQUEsSUFBQSxLQUFBQSxRQUFBLElBQUEsTUFDQSxNQUVBM0YsTUFBQWUsU0FBQW1FLFNBQUFYLEVBQUF2RCxjQUNBOEQsTUFLQSxNQUFBYyxLQUtBLFFBQUFkLEtBQ0FYLEtBQUFDLE9BQUFDLFVBQUFTLFNBQ0FRLFNBQUFaLElBQ0FKLFFBQUEsU0FBQUMsR0FDQXZFLE1BQUE0QixLQUNBMkMsRUFBQTFDLGFBQ0EwQyxFQUFBekMsT0FDQXlDLEVBQUF4QyxZQUNBLE1BQUF3QyxFQUFBdkMsU0FDQTRDLEtBQUFDLE1BQ0FOLEVBQUF2QyxTQUFBMkQsUUFBQSxJQUFBLEtBQUFBLFFBQUEsSUFBQSxNQUNBLE1BRUEzRixNQUFBZSxTQUFBbUUsU0FBQVgsRUFBQXZELGVBMUVBLEdBQUEwRCxHQUFBLElBNkVBLFFBQ0FoRSxTQUFBQSxFQUNBRCxZQUFBQSxFQUNBcUUsUUFBQUEsRUFDQUMsaUJBQUFBLE1DbkZBYyxZQUFBLFdBTUEsUUFBQUMsS0FDQTNCLEtBQUFDLE9BQUEyQixLQUNBLFNBQ0EsTUFFQTVCLEtBQUFDLE9BQUEyQixLQUNBLFlBQ0EsS0FDQUMsRUFDQUMsR0FJQSxRQUFBRCxLQUNBRSxFQUFBQyxXQUFBLEdBQ0FDLFdBQUFDLFFBQUFDLGNBQUEsS0FJQSxRQUFBSixHQUFBQyxHQUNBaEMsS0FBQW9DLEtBQUFDLFdBQ0FDLFVBQUEsMkVBQ0FDLE1BQUEsaURBQ0FQLFVBQUFBLEdBQ0FRLEdBR0EsUUFBQUMsS0FDQSxNQUFBQyxHQUdBLFFBQUFGLEdBQUFHLEdBQ0EzQyxLQUFBQyxPQUFBMkMsT0FBQUMsU0FBQUMsTUFBQTNDLFFBQUEsU0FBQTRDLEdBQ0FBLEVBQUFsQyxPQUNBcUIsUUFBQWMsWUFBQUQsRUFBQUUsUUFBQUYsRUFBQUcsTUFDQVIsR0FBQSxFQUVBckcsWUFBQXVFLHNCQXhDQSxLQUFBa0IsR0FBQSw0Q0FDQSxJQUFBWSxJQUFBLENBNENBLFFBQ0FmLFlBQUFBLEVBQ0FjLFNBQUFBLEVBQ0FWLE9BQUFBLE1DbkRBRyxRQUFBLFdBS0EsUUFBQUMsS0FDQWdCLEVBQUExRyxHQUFBLFFBQUEyRyxHQUNBRCxFQUFBbEcsWUFBQSxVQUVBLFFBQUFtRyxLQUNBMUIsWUFBQUssT0FBQUMsV0FBQSxHQUtBLFFBQUFnQixHQUFBSyxFQUFBSCxHQUNBSSxFQUFBQyxLQUFBTCxHQUNBSSxFQUFBckcsWUFBQSxVQUNBa0csRUFBQXBHLFNBQUEsVUFqQkEsR0FBQW9HLEdBQUFuSCxFQUFBLFVBRUFzSCxFQUFBdEgsRUFBQSxRQWlCQSxRQUNBbUcsWUFBQUEsRUFDQWEsWUFBQUEiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYm9hcmQgPSAoZnVuY3Rpb24oKSB7XG5cbiAgIHZhciAkYm9hcmQgPSAkKFwiI2JvYXJkXCIpO1xuICAgdmFyICRib2FyZF9oZWFkZXIgPSAkKFwiI2JvYXJkX2hlYWRlclwiKTtcbiAgIHZhciAkbmV3X2dhbWUgPSAkKFwiI25ld19nYW1lXCIpO1xuXG4gICBjb25zdCBIRUlHSFQgPSA5O1xuICAgY29uc3QgV0lEVEggPSA5O1xuXG4gICB2YXIgYm9hcmQ7XG5cbiAgIHZhciAkc2VsZWN0ZWQgPSBudWxsO1xuXG4gICBjb25zdCB0eXBlTmFtZXMgPSBbXG4gICAgICAnZW1wdHknLFxuICAgICAgJ2F0dGFja2VyJyxcbiAgICAgICdkZWZlbmRlcicsXG4gICAgICAna2luZydcbiAgIF07XG5cbiAgIGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICB2YXIgJGNlbGwgPSAkKHRoaXMpO1xuICAgICAgdmFyIHR5cGUgPSAkY2VsbC5hdHRyKCdjbGFzcycpO1xuXG4gICAgICBpZih0eXBlID09IFwiYXR0YWNrZXJcIikge1xuICAgICAgICAgaWYoJHNlbGVjdGVkKSB7XG4gICAgICAgICAgICAkc2VsZWN0ZWQuYXR0cignY2xhc3MnLCdhdHRhY2tlcicpO1xuICAgICAgICAgICAgJHNlbGVjdGVkID0gbnVsbDtcbiAgICAgICAgIH1cbiAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgJGNlbGwuYXR0cignY2xhc3MnLCdhdHRhY2tlci1zZWxlY3QnKTtcbiAgICAgICAgICAgICRzZWxlY3RlZCA9ICRjZWxsO1xuICAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSBpZigkc2VsZWN0ZWQpe1xuICAgICAgICAgaWYodHlwZSA9PSBcImVtcHR5XCIpIHtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBnb29nbGVfYXBpcy5wbGF5ZXJfbW92ZShcbiAgICAgICAgICAgICAgICRzZWxlY3RlZC5hdHRyKCdpZCcpLFxuICAgICAgICAgICAgICAgJGNlbGwuYXR0cignaWQnKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgIH1cbiAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgJHNlbGVjdGVkLmF0dHIoJ2NsYXNzJywnYXR0YWNrZXInKTtcbiAgICAgICAgICAgICRzZWxlY3RlZCA9IG51bGw7XG4gICAgICAgICB9XG4gICAgICB9XG4gICB9XG4gICBmdW5jdGlvbiBuZXdfZ2FtZSgpIHtcbiAgICAgICRib2FyZC5vbignY2xpY2snLCcucm93ID4gZGl2ID4gZGl2Jywgb25DbGljayk7XG4gICAgICBnb29nbGVfYXBpcy5uZXdfZ2FtZSgpO1xuICAgICAgJGJvYXJkX2hlYWRlci5oaWRlKCk7XG4gICB9XG4gICAkbmV3X2dhbWUub24oJ2NsaWNrJyxuZXdfZ2FtZSk7XG5cbiAgIGZ1bmN0aW9uIGNlbGxDbGljayh0YXJnZXQsIHBhcmFtcykge1xuXG4gICB9XG5cbiAgIGZ1bmN0aW9uIGdhbWVfZW5kKGdhbWVfc3RhdGUpIHtcbiAgICAgIGlmKGdhbWVfc3RhdGUgPT0gMiB8fCBnYW1lX3N0YXRlID09IDMpIHtcbiAgICAgICAgIGlmKGdhbWVfc3RhdGUgPT0gMil7XG4gICAgICAgICAgICAkYm9hcmRfaGVhZGVyLmFwcGVuZChcIlBsYXllciB3b24hXCIpO1xuICAgICAgICAgICAgJGJvYXJkX2hlYWRlci5hZGRDbGFzcyhcImF0dGFja2VyLWhlYWRlclwiKTtcbiAgICAgICAgIH1cbiAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICRib2FyZF9oZWFkZXIuYWRkQ2xhc3MoXCJkZWZlbmRlci1oZWFkZXJcIik7XG4gICAgICAgICAgICAgJGJvYXJkX2hlYWRlci5hcHBlbmQoXCJBSSB3b24hXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICRib2FyZC5vZmYoKTtcbiAgICAgICAgICRib2FyZF9oZWFkZXIucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICB9XG5cbiAgIGZ1bmN0aW9uIGVtcHR5X2JvYXJkKCkge1xuXG4gICAgICAkYm9hcmQgPSAkKFwiI2JvYXJkXCIpO1xuICAgICAgdmFyIHRhYmxlX2J1aWxkZXIgPSBcIlwiO1xuICAgXHRmb3IodmFyIHJvdz0wOyByb3c8IEhFSUdIVDsgcm93Kyspe1xuICAgICAgICAgdmFyIHJvd19idWlsZGVyID0gXCI8ZGl2IGNsYXNzPSdyb3cnPlwiO1xuICAgXHRcdGZvcih2YXIgY29sPTA7IGNvbDwgV0lEVEg7IGNvbCsrKSB7XG4gICAgICAgICAgICByb3dfYnVpbGRlciArPSBcIjxkaXY+PGRpdiBkYXRhLXZhbD0nMCcgY2xhc3M9J2VtcHR5JyBpZD0nXCIgKyByb3cgKyBcIixcIiArIGNvbCArIFwiJz48L2Rpdj48L2Rpdj5cIjtcbiAgIFx0XHR9XG4gICAgICAgICByb3dfYnVpbGRlciArPSBcIjwvZGl2PlwiO1xuXG4gICAgICAgICB0YWJsZV9idWlsZGVyICs9IHJvd19idWlsZGVyO1xuICAgXHR9XG5cbiAgICAgICRib2FyZC5hcHBlbmQodGFibGVfYnVpbGRlcik7XG5cbiAgICAgICRib2FyZC5vbignY2xpY2snLCcucm93ID4gZGl2ID4gZGl2Jywgb25DbGljayk7XG5cbiAgIH1cblxuICAgZnVuY3Rpb24gZmFkZUluTmV3Q2xhc3Moc291cmNlLCBmcm9tX2NsYXNzLCB0b19jbGFzcykge1xuICAgICAgc291cmNlLnN3aXRjaENsYXNzKGZyb21fY2xhc3MsIHRvX2NsYXNzLCAxMDAwKTtcbiAgIH1cblxuICAgZnVuY3Rpb24gbW92ZShvcmlnaW5fdmFsdWUsIG9yaWdpbiwgZGVzdGluYXRpb24sIGNhcHR1cmVzKSB7XG5cbiAgICAgIGlmKCRzZWxlY3RlZCkge1xuICAgICAgICAgJHNlbGVjdGVkLmF0dHIoJ2NsYXNzJywnYXR0YWNrZXInKTtcbiAgICAgICAgICRzZWxlY3RlZCA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciBvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG9yaWdpbik7XG4gICAgICB2YXIgJG9yID0gJChvcik7XG4gICAgICAkb3IuYXR0cignY2xhc3MnLHR5cGVOYW1lc1swXSk7XG5cbiAgICAgIHZhciBkZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRlc3RpbmF0aW9uKTtcbiAgICAgIHZhciAkZGUgPSAkKGRlKTtcbiAgICAgICRkZS5hdHRyKCdjbGFzcycsdHlwZU5hbWVzW29yaWdpbl92YWx1ZV0pO1xuXG4gICAgICBpZihjYXB0dXJlcyAmJiBjYXB0dXJlc1swXSkge1xuXG4gICAgICAgICBmb3IodmFyIGk9MDsgaTwgY2FwdHVyZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGYgPSBjYXB0dXJlc1tpXVswXTtcbiAgICAgICAgICAgIHQgPSBjYXB0dXJlc1tpXVsxXTtcbiAgICAgICAgICAgIHZhciBjYSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGYgKyBcIixcIiArIHQpO1xuICAgICAgICAgICAgdmFyICRjYSA9ICQoY2EpO1xuICAgICAgICAgICAgJGNhLmF0dHIoJ2NsYXNzJyx0eXBlTmFtZXNbMF0pO1xuICAgICAgICAgfVxuICAgICAgfVxuICAgfVxuXG4gICBmdW5jdGlvbiBuZXdfYm9hcmQoYm9hcmQpIHtcbiAgICAgIGJvYXJkID0gYm9hcmQ7XG4gICBcdGZvcih2YXIgcm93PTA7IHJvdyA8IGJvYXJkLmxlbmd0aDsgcm93Kyspe1xuICAgICAgICAgdmFyIGNvbHVtbldpZHRoID0gYm9hcmRbcm93XS5sZW5ndGg7XG4gICBcdFx0Zm9yKHZhciBjb2w9MDsgY29sIDwgY29sdW1uV2lkdGg7IGNvbCsrKSB7XG4gICAgICAgICAgICB2YXIgdmFsID0gYm9hcmRbcm93XVtjb2xdO1xuXG4gICAgICAgICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHJvdyArIFwiLFwiICsgY29sKTtcblxuICAgICAgICAgICAgICAgdmFyICRjZWxsID0gJCh0KTtcblxuICAgICAgICAgICAgICAgJGNlbGwuYXR0cignY2xhc3MnLHR5cGVOYW1lc1t2YWxdKTtcblxuICAgXHRcdH1cbiAgIFx0fVxuXG4gICB9XG5cbiAgIGZ1bmN0aW9uIG1ha2VfbW92ZShmcm9tX3IsIGZyb21fYywgdG9fciwgdG9fYywgY2FwdHVyZXMsIHZhbHVlKSB7XG5cbiAgICAgIGJvYXJkW2Zyb21fcl1bZnJvbV9jXSA9IDA7XG4gICAgICBib2FyZFt0b19yXVt0b19jXSA9IHZhbHVlO1xuICAgICAgJChcIiNcIiArIGZyb21fciArIFwiLFwiICsgZnJvbV9jKS5hdHRyKCdjbGFzcycsJ2VtcHR5Jyk7XG4gICAgICAkKFwiI1wiICsgdG9fciArIFwiLFwiICsgdG9fYykuYXR0cignY2xhc3MnLHR5cGVOYW1lc1t2YWx1ZV0pO1xuICAgICAgZm9yKHZhciBjYXB0dXJlIGluIGNhcHR1cmVzKSB7XG4gICAgICAgICB2YXIgciA9IGNhcHR1cmVbMF07XG4gICAgICAgICB2YXIgYyA9IGNhcHR1cmVbMV07XG4gICAgICAgICBib2FyZFtyXVtjXSA9IDA7XG4gICAgICAgICAkKFwiI1wiICsgciArIFwiLFwiICsgYykuYXR0cignY2xhc3MnLCdlbXB0eScpO1xuICAgICAgfVxuXG4gICB9XG5cbiAgIHJldHVybiB7XG4gICAgICBlbXB0eV9ib2FyZDogZW1wdHlfYm9hcmQsXG4gICAgICBuZXdfYm9hcmQ6IG5ld19ib2FyZCxcbiAgICAgIG1vdmU6IG1vdmUsXG4gICAgICBnYW1lX2VuZDogZ2FtZV9lbmRcbiAgIH07XG59KSgpO1xuIiwidmFyIGRpYWxvZ3MgPSAoZnVuY3Rpb24oKXtcblxuICAgdmFyICRob3cgPSAkKFwiI2hvd1wiKTtcbiAgIHZhciAkaGlzdG9yeSA9ICQoXCIjaGlzdG9yeVwiKTtcbiAgIHZhciAkYWJvdXQgPSAkKFwiI2Fib3V0XCIpO1xuXG4gICB2YXIgaG93X2RpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdob3ctZGlhbG9nJyk7XG4gICB2YXIgaGlzdG9yeV9kaWFsb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGlzdG9yeS1kaWFsb2cnKTtcbiAgIHZhciBhYm91dF9kaWFsb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWJvdXQtZGlhbG9nJyk7XG5cbiAgIGZ1bmN0aW9uIG9wZW5Ib3coKXtcbiAgICAgIGhvd19kaWFsb2cuc2hvd01vZGFsKCk7XG4gICB9XG5cbiAgIGZ1bmN0aW9uIG9wZW5IaXN0b3J5KCkge1xuICAgICAgaGlzdG9yeV9kaWFsb2cuc2hvd01vZGFsKCk7XG4gICB9XG5cbiAgIGZ1bmN0aW9uIG9wZW5BYm91dCgpIHtcbiAgICAgIGFib3V0X2RpYWxvZy5zaG93TW9kYWwoKTtcbiAgIH1cblxuICAgZnVuY3Rpb24gY2xvc2VIb3coKSB7XG4gICAgICBob3dfZGlhbG9nLmNsb3NlKCk7XG4gICB9XG5cbiAgIGZ1bmN0aW9uIGNsb3NlSGlzdG9yeSgpIHtcbiAgICAgIGhpc3RvcnlfZGlhbG9nLmNsb3NlKCk7XG4gICB9XG5cbiAgIGZ1bmN0aW9uIGNsb3NlQWJvdXQoKSB7XG4gICAgICBhYm91dF9kaWFsb2cuY2xvc2UoKTtcbiAgIH1cblxuICAgJGhvdy5vbignY2xpY2snLCBvcGVuSG93KTtcbiAgICRoaXN0b3J5Lm9uKCdjbGljaycsIG9wZW5IaXN0b3J5KTtcbiAgICRhYm91dC5vbignY2xpY2snLCBvcGVuQWJvdXQpO1xuXG4gICBob3dfZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy5jbG9zZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2VIb3cpO1xuICAgaGlzdG9yeV9kaWFsb2cucXVlcnlTZWxlY3RvcignLmNsb3NlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZUhpc3RvcnkpO1xuICAgYWJvdXRfZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy5jbG9zZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2VBYm91dCk7XG5cbn0pKCk7XG4iLCJ2YXIgZ29vZ2xlX2FwaXMgPSAoZnVuY3Rpb24oKSB7XG5cbiAgIHZhciBLRVkgPSBudWxsO1xuXG4gICBmdW5jdGlvbiBuZXdfZ2FtZSgpIHtcbiAgICAgIGdhcGkuY2xpZW50LmhuZWZhdGFmbC5uZXdfZ2FtZSgpLmV4ZWN1dGUoZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICAgS0VZID0gcmVzcG9uc2Uua2V5O1xuICAgICAgICAgYm9hcmQubmV3X2JvYXJkKEpTT04ucGFyc2UocmVzcG9uc2UuYm9hcmQpKTtcbiAgICAgICAgIGFpX21vdmUoKTtcbiAgICAgIH0pO1xuICAgfVxuXG4gICBmdW5jdGlvbiBsYXN0X3BsYXllcl9nYW1lKCkge1xuXG4gICAgICBnYXBpLmNsaWVudC5obmVmYXRhZmwubGFzdF9wbGF5ZXJfZ2FtZSgpLmV4ZWN1dGUoZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgICAgaWYocmVzcG9uc2UuY29kZSA9PSA0MDQpIHtcbiAgICAgICAgICAgIG5ld19nYW1lKCk7XG4gICAgICAgICB9XG4gICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIEtFWSA9IHJlc3BvbnNlLmtleTtcbiAgICAgICAgICAgIGJvYXJkLm5ld19ib2FyZChKU09OLnBhcnNlKHJlc3BvbnNlLmJvYXJkKSk7XG4gICAgICAgICAgICB2YXIgc3RhdGUgPSBwYXJzZUludChyZXNwb25zZS5zdGF0ZSk7XG4gICAgICAgICAgICBpZighYm9hcmQuZ2FtZV9lbmQoc3RhdGUpKVxuICAgICAgICAgICAgICAgaWYoc3RhdGUgPT0gMSkgYWlfbW92ZSgpO1xuICAgICAgICAgfVxuICAgICAgfSk7XG4gICB9XG5cbiAgIGZ1bmN0aW9uIHBsYXllcl9tb3ZlKG9yaWdpbiwgZGVzdGluYXRpb24pIHtcbiAgICAgIHZhciBvcmlnaW5zID0gb3JpZ2luLnNwbGl0KCcsJyk7XG4gICAgICB2YXIgZGVzdGluYXRpb25zID0gZGVzdGluYXRpb24uc3BsaXQoJywnKTtcblxuICAgICAgdHJ5XG4gICAgICB7XG4gICAgICAgICBnYXBpLmNsaWVudC5obmVmYXRhZmwucGxheWVyX21vdmUoe1xuICAgICAgICAgICAgXCJnYW1lX2tleVwiOiBLRVksXG4gICAgICAgICAgICBcIm9yaWdpbl9yb3dcIjogb3JpZ2luc1swXSxcbiAgICAgICAgICAgIFwib3JpZ2luX2NvbHVtblwiOiBvcmlnaW5zWzFdLFxuICAgICAgICAgICAgXCJkZXN0aW5hdGlvbl9yb3dcIjogZGVzdGluYXRpb25zWzBdLFxuICAgICAgICAgICAgXCJkZXN0aW5hdGlvbl9jb2x1bW5cIjogZGVzdGluYXRpb25zWzFdXG4gICAgICAgICB9KS5leGVjdXRlKGZ1bmN0aW9uKHJlc3BvbnNlKXtcblxuICAgICAgICAgICAgYm9hcmQubW92ZShcbiAgICAgICAgICAgICAgIHJlc3BvbnNlLm9yaWdpbl92YWx1ZSxcbiAgICAgICAgICAgICAgIHJlc3BvbnNlLm9yaWdpbixcbiAgICAgICAgICAgICAgIHJlc3BvbnNlLmRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgICAgcmVzcG9uc2UuY2FwdHVyZXMgIT0gXCJbXVwiID9cbiAgICAgICAgICAgICAgIEpTT04ucGFyc2UoXG4gICAgICAgICAgICAgICAgICByZXNwb25zZS5jYXB0dXJlcy5yZXBsYWNlKCcoJywnWycpLnJlcGxhY2UoJyknLCddJylcbiAgICAgICAgICAgICAgICk6IG51bGxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBpZighYm9hcmQuZ2FtZV9lbmQocGFyc2VJbnQocmVzcG9uc2UuZ2FtZV9zdGF0ZSkpKSB7XG4gICAgICAgICAgICAgICBhaV9tb3ZlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgY2F0Y2goZXJyKSB7XG5cbiAgICAgIH1cbiAgIH1cblxuICAgICAgZnVuY3Rpb24gYWlfbW92ZSgpIHtcbiAgICAgICAgIGdhcGkuY2xpZW50LmhuZWZhdGFmbC5haV9tb3ZlKHtcbiAgICAgICAgICAgIFwiZ2FtZV9rZXlcIjpLRVlcbiAgICAgICAgIH0pLmV4ZWN1dGUoZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgICAgICAgYm9hcmQubW92ZShcbiAgICAgICAgICAgICAgIHJlc3BvbnNlLm9yaWdpbl92YWx1ZSxcbiAgICAgICAgICAgICAgIHJlc3BvbnNlLm9yaWdpbixcbiAgICAgICAgICAgICAgIHJlc3BvbnNlLmRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgICAgcmVzcG9uc2UuY2FwdHVyZXMgIT0gXCJbXVwiID9cbiAgICAgICAgICAgICAgIEpTT04ucGFyc2UoXG4gICAgICAgICAgICAgICAgICByZXNwb25zZS5jYXB0dXJlcy5yZXBsYWNlKCcoJywnWycpLnJlcGxhY2UoJyknLCddJylcbiAgICAgICAgICAgICAgICk6IG51bGxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBib2FyZC5nYW1lX2VuZChwYXJzZUludChyZXNwb25zZS5nYW1lX3N0YXRlKSk7XG4gICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgICBuZXdfZ2FtZTogbmV3X2dhbWUsXG4gICAgICAgICBwbGF5ZXJfbW92ZTogcGxheWVyX21vdmUsXG4gICAgICAgICBhaV9tb3ZlOiBhaV9tb3ZlLFxuICAgICAgICAgbGFzdF9wbGF5ZXJfZ2FtZTogbGFzdF9wbGF5ZXJfZ2FtZVxuICAgICAgfTtcbn0pKCk7XG4iLCJ2YXIgZ29vZ2xlX2F1dGggPSAoZnVuY3Rpb24oKXtcblxuICAgLy9jb25zdCB1cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9fYWgvYXBpXCI7XG4gICBjb25zdCB1cmwgPSBcImh0dHBzOi8vaG5lZmF0YWZsLWdhbWUuYXBwc3BvdC5jb20vX2FoL2FwaVwiO1xuICAgdmFyIHNpZ25lZGluID0gZmFsc2U7XG5cbiAgIGZ1bmN0aW9uIGxvYWRNb2R1bGVzKCl7XG4gICAgICBnYXBpLmNsaWVudC5sb2FkKFxuICAgICAgICAgJ29hdXRoMicsXG4gICAgICAgICAndjInXG4gICAgICApO1xuICAgICAgZ2FwaS5jbGllbnQubG9hZChcbiAgICAgICAgICdobmVmYXRhZmwnLFxuICAgICAgICAgJ3YxJyxcbiAgICAgICAgIGFmdGVyTG9hZGVkLFxuICAgICAgICAgdXJsXG4gICAgICApO1xuICAgfVxuXG4gICBmdW5jdGlvbiBhZnRlckxvYWRlZCgpIHtcbiAgICAgIHNpZ25pbihpbW1lZGlhdGUgPSB0cnVlKTtcbiAgICAgIHNldFRpbWVvdXQocHJvZmlsZS5lbmFibGVMb2dpbigpLCAyMDAwKTtcblxuICAgfVxuXG4gICBmdW5jdGlvbiBzaWduaW4oaW1tZWRpYXRlKSB7XG4gICAgICBnYXBpLmF1dGguYXV0aG9yaXplKHtcbiAgICAgICAgIGNsaWVudF9pZDogJzMxNDI3MjE2MDI1MC11Y3JxZzQ0YzFvajlrbmxyZmF0cXZxZjFiM3BtOTgxOS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbScsXG4gICAgICAgICBzY29wZTogJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvdXNlcmluZm8uZW1haWwnLFxuICAgICAgICAgaW1tZWRpYXRlOiBpbW1lZGlhdGVcbiAgICAgIH0sIHVzZXJBdXRoZWQpO1xuICAgfVxuXG4gICBmdW5jdGlvbiBpc0F1dGhlZCgpIHtcbiAgICAgIHJldHVybiBzaWduZWRpbjtcbiAgIH1cblxuICAgZnVuY3Rpb24gdXNlckF1dGhlZChtb2RlKSB7XG4gICAgICB2YXIgcmVxdWVzdCA9IGdhcGkuY2xpZW50Lm9hdXRoMi51c2VyaW5mby5nZXQoKS5leGVjdXRlKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgIGlmICghcmVzcC5jb2RlKSB7XG4gICAgICAgICAgICBwcm9maWxlLnNldExvZ2dlZEluKHJlc3AucGljdHVyZSwgcmVzcC5uYW1lKTtcbiAgICAgICAgICAgIHNpZ25lZGluID0gdHJ1ZTtcbiAgICAgICAgICAgIC8vZ29vZ2xlX2FwaXMubmV3X2dhbWUoZ29vZ2xlX2FwaXMuYWlfbW92ZSk7XG4gICAgICAgICAgICBnb29nbGVfYXBpcy5sYXN0X3BsYXllcl9nYW1lKCk7XG4gICAgICAgICAvLyAgIGdvb2dsZV9hcGlzLmFpX21vdmUoKTtcbiAgICAgICAgICB9XG4gICAgIH0pO1xuICAgfVxuICAgcmV0dXJuIHtcbiAgICAgIGxvYWRNb2R1bGVzOiBsb2FkTW9kdWxlcyxcbiAgICAgIGlzQXV0aGVkOiBpc0F1dGhlZCxcbiAgICAgIHNpZ25pbjogc2lnbmluXG4gICB9O1xuXG59KSgpO1xuIiwidmFyIHByb2ZpbGUgPSAoZnVuY3Rpb24oKSB7XG4gICB2YXIgJGxvZ2luID0gJChcIiNsb2dpblwiKTtcbiAgIC8vdmFyICRwaWN0dXJlID0gJChcIiNwaWN0dXJlXCIpO1xuICAgdmFyICRuYW1lID0gJChcIiNuYW1lXCIpO1xuXG4gICBmdW5jdGlvbiBlbmFibGVMb2dpbigpIHtcbiAgICAgICRsb2dpbi5vbignY2xpY2snLCBfbG9naW5DbGljayk7XG4gICAgICAkbG9naW4ucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XG4gICB9XG4gICBmdW5jdGlvbiBfbG9naW5DbGljaygpIHtcbiAgICAgIGdvb2dsZV9hdXRoLnNpZ25pbihpbW1lZGlhdGUgPSBmYWxzZSk7XG4gICB9XG4gICBmdW5jdGlvbiBfbG9nb3V0Q2xpY2soKSB7XG4gICAgICAvL3NpbmdpbihpbW1lZGlhdGUgPSBmYWxzZSk7XG4gICB9XG4gICBmdW5jdGlvbiBzZXRMb2dnZWRJbihzcmMsIG5hbWUpIHtcbiAgICAgICRuYW1lLmh0bWwobmFtZSk7XG4gICAgICAkbmFtZS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcbiAgICAgICRsb2dpbi5hZGRDbGFzcyhcImhpZGRlblwiKTtcbiAgIH1cbiAgIHJldHVybiB7XG4gICAgICBlbmFibGVMb2dpbjogZW5hYmxlTG9naW4sXG4gICAgICBzZXRMb2dnZWRJbjogc2V0TG9nZ2VkSW5cbiAgIH07XG59KSgpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
