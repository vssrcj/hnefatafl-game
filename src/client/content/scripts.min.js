var board=function(){function e(){var e=$(this),a=e.attr("class");if("attacker"==a)p?(p.attr("class","attacker"),p=null):(e.attr("class","attacker-select"),p=e);else if(p)if("empty"==a){google_apis.player_move(p.attr("id"),e.attr("id"))}else p.attr("class","attacker"),p=null}function a(){c.on("click",".row > div > div",e),google_apis.new_game(),d.addClass("hidden")}function n(){p&&(p.attr("class","attacker"),p=null)}function o(e){return 2==e||3==e?(2==e?(u.text("Player won!"),d.addClass("attacker-header")):(d.addClass("defender-header"),u.text("AI won!")),c.off(),d.removeClass("hidden"),!0):!1}function i(){c=$("#board");for(var a="",t=0;g>t;t++){for(var n="<div class='row'>",o=0;m>o;o++)n+="<div><div data-val='0' class='empty' id='"+t+","+o+"'></div></div>";n+="</div>",a+=n}c.append(a),c.on("click",".row > div > div",e)}function r(e,a,n,o){var i=document.getElementById(a),r=$(i);r.attr("class",v[0]);var l=document.getElementById(n),c=$(l);if(c.attr("class",v[e]),o&&o[0])for(var d=0;d<o.length;d++){f=o[d][0],t=o[d][1];var s=document.getElementById(f+","+t);console.log(f+","+t);var u=$(s);u.attr("class",v[0])}}function l(e){e=e;for(var a=0;a<e.length;a++)for(var t=e[a].length,n=0;t>n;n++){var o=e[a][n],i=document.getElementById(a+","+n),r=$(i);r.attr("class",v[o])}}var c=$("#board"),d=$("#board_header"),s=$("#new_game"),u=$("#header_text");const g=9,m=9;var p=null;const v=["empty","attacker","defender","king"];return s.on("click",a),{empty_board:i,new_board:l,move:r,game_end:o,reset:n}}(),dialogs=function(){function e(){d.showModal()}function a(){s.showModal()}function t(){u.showModal()}function n(){d.close()}function o(){s.close()}function i(){u.close()}var r=$("#how"),l=$("#history"),c=$("#about"),d=document.getElementById("how-dialog"),s=document.getElementById("history-dialog"),u=document.getElementById("about-dialog");r.on("click",e),l.on("click",a),c.on("click",t),d.querySelector(".close").addEventListener("click",n),s.querySelector(".close").addEventListener("click",o),u.querySelector(".close").addEventListener("click",i)}(),google_apis=function(){function e(){gapi.client.hnefatafl.new_game().execute(function(e){o=e.key,board.new_board(JSON.parse(e.board)),n()})}function a(){gapi.client.hnefatafl.last_player_game().execute(function(a){if(404==a.code)e();else{o=a.key,board.new_board(JSON.parse(a.board));var t=parseInt(a.state);board.game_end(t)||1==t&&n()}})}function t(e,a){i.addClass("loading");var t=e.split(","),r=a.split(",");try{gapi.client.hnefatafl.player_move({game_key:o,origin_row:t[0],origin_column:t[1],destination_row:r[0],destination_column:r[1]}).execute(function(e){board.reset();var a="[]"!=e.captures?e.captures.replace(/\(/g,"[").replace(/\)/g,"]").replace(/ /g,""):null;console.log(e),e.code||(board.move(e.origin_value,e.origin,e.destination,JSON.parse(a)),board.game_end(parseInt(e.game_state))?i.removeClass("loading"):n())})}catch(l){}finally{}}function n(){gapi.client.hnefatafl.ai_move({game_key:o}).execute(function(e){var a="[]"!=e.captures?e.captures.replace(/\(/g,"[").replace(/\)/g,"]").replace(/ /g,""):null;console.log(e),board.move(e.origin_value,e.origin,e.destination,JSON.parse(a)),board.game_end(parseInt(e.game_state)),i.removeClass("loading")})}var o=null,i=$("#loader");return{new_game:e,player_move:t,ai_move:n,last_player_game:a}}(),google_auth=function(){function e(){gapi.client.load("oauth2","v2"),gapi.client.load("hnefatafl","v1",a,i)}function a(){t(immediate=!0),setTimeout(profile.enableLogin(),2e3)}function t(e){gapi.auth.authorize({client_id:"314272160250-ucrqg44c1oj9knlrfatqvqf1b3pm9819.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/userinfo.email",immediate:e},o)}function n(){return r}function o(e){gapi.client.oauth2.userinfo.get().execute(function(e){e.code||(profile.setLoggedIn(e.picture,e.name),r=!0,google_apis.last_player_game())})}const i="https://hnefatafl-game.appspot.com/_ah/api";var r=!1;return{loadModules:e,isAuthed:n,signin:t}}(),profile=function(){function e(){n.on("click",a),n.removeClass("hidden")}function a(){google_auth.signin(immediate=!1)}function t(e,a){o.html(a),o.removeClass("hidden"),n.addClass("hidden")}var n=$("#login"),o=$("#name");return{enableLogin:e,setLoggedIn:t}}();
//# sourceMappingURL=data:application/json;base64,
