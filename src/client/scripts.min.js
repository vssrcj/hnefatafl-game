var board=function(){function e(){var e=$(this),a=e.attr("class");"attacker"==a?g?(g.attr("class","attacker"),g=null):(e.attr("class","attacker-select"),g=e):g&&("empty"==a?(google_apis.player_move(g.attr("id"),e.attr("id")),g=null):(g.attr("class","attacker"),g=null))}function a(){l.on("click",".row > div > div",e),google_apis.new_game(),c.hide()}function n(e){return 2==e||3==e?(2==e?(c.append("Player won!"),c.addClass("attacker-header")):(c.addClass("defender-header"),c.append("AI won!")),l.off(),c.removeClass("hidden"),!0):!1}function o(){l=$("#board");for(var a="",n=0;d>n;n++){for(var t="<div class='row'>",o=0;u>o;o++)t+="<div><div data-val='0' class='empty' id='"+n+","+o+"'></div></div>";t+="</div>",a+=t}l.append(a),l.on("click",".row > div > div",e)}function i(e,a,n,o){var i=document.getElementById(a),r=$(i);r.attr("class",p[0]);var l=document.getElementById(n),c=$(l);if(c.attr("class",p[e]),o&&o[0])for(var s=0;s<o.length;s++){f=o[s][0],t=o[s][1],console.log(f);var d=document.getElementById(f+","+t),u=$(d);u.attr("class",p[0])}}function r(e){e=e;for(var a=0;a<e.length;a++)for(var n=e[a].length,t=0;n>t;t++){var o=e[a][t],i=document.getElementById(a+","+t),r=$(i);r.attr("class",p[o])}}var l=$("#board"),c=$("#board_header"),s=$("#new_game");const d=9,u=9;var g=null;const p=["empty","attacker","defender","king"];return s.on("click",a),{empty_board:o,new_board:r,move:i,game_end:n}}(),google_apis=function(){function e(){gapi.client.hnefatafl.new_game().execute(function(e){o=e.key,board.new_board(JSON.parse(e.board)),t()})}function a(){gapi.client.hnefatafl.last_player_game().execute(function(a){if(console.log(a),404==a.code)e();else{o=a.key,board.new_board(JSON.parse(a.board));var n=parseInt(a.state);board.game_end(n)||1==n&&t()}})}function n(e,a){var n=e.split(","),i=a.split(",");gapi.client.hnefatafl.player_move({game_key:o,origin_row:n[0],origin_column:n[1],destination_row:i[0],destination_column:i[1]}).execute(function(e){console.log(e),board.move(e.origin_value,e.origin,e.destination,"[]"!=e.captures?JSON.parse(e.captures.replace("(","[").replace(")","]")):null),board.game_end(parseInt(e.game_state))||t()})}function t(){gapi.client.hnefatafl.ai_move({game_key:o}).execute(function(e){console.log(e),board.move(e.origin_value,e.origin,e.destination,"[]"!=e.captures?JSON.parse(e.captures.replace("(","[").replace(")","]")):null),board.game_end(parseInt(e.game_state))})}var o=null;return{new_game:e,player_move:n,ai_move:t,last_player_game:a}}(),google_auth=function(){function e(){gapi.client.load("oauth2","v2"),gapi.client.load("hnefatafl","v1",a,i)}function a(){n(immediate=!0),setTimeout(profile.enableLogin(),2e3)}function n(e){gapi.auth.authorize({client_id:"314272160250-ucrqg44c1oj9knlrfatqvqf1b3pm9819.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/userinfo.email",immediate:e},o)}function t(){return r}function o(e){gapi.client.oauth2.userinfo.get().execute(function(e){e.code||(profile.setLoggedIn(e.picture,e.name),r=!0,google_apis.last_player_game())})}const i="http://localhost:8080/_ah/api";var r=!1;return{loadModules:e,isAuthed:t,signin:n}}(),profile=function(){function e(){t.on("click",a),console.log("enabled"),t.removeClass("hidden")}function a(){console.log("clik"),google_auth.signin(immediate=!1)}function n(e,a){console.log(a),o.html(a),o.removeClass("hidden"),t.addClass("hidden")}var t=$("#login"),o=$("#name");return{enableLogin:e,setLoggedIn:n}}();
//# sourceMappingURL=data:application/json;base64,
